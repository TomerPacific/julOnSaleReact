{"version":3,"sources":["DateHeader.js","Spinner.js","Categories.js","App.js","reportWebVitals.js","titleChanger.js","index.js"],"names":["months","DateHeader","state","date","Date","this","getMonth","getDate","getFullYear","className","formatDate","React","Component","Spinner","props","status","Categories","categories","isFetchingData","fetchData","self","ReactDOM","findDOMNode","length","buildCategories","setState","isFetching","fetch","then","response","json","result","message","spinnerHandler","catch","error","index","category","div","document","createElement","header","anchor","image","innerHTML","name","src","setAttribute","href","appendChild","App","shouldShowSpinner","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","changeTitleWhenUserMovesAway","pageTitle","title","window","addEventListener","event","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5be2aea4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DateHeader.css';\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\nclass DateHeader extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {date : new Date()};\r\n  }\r\n  formatDate() {\r\n    return \"For the day of \" + months[this.state.date.getMonth()] + ' ' + this.state.date.getDate() + ', ' + this.state.date.getFullYear(); \r\n  }\r\n  render() {\r\n    return <div className=\"DateHeader\">\r\n    <p>{this.formatDate()}</p>\r\n  </div>\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default DateHeader;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nclass Spinner extends React.Component {\r\n  render() {\r\n\t  const shouldShow = this.props.status;\r\n\t  if (shouldShow) {\r\n\t\treturn <div className=\"loader\">\r\n\t\t\t<div>\r\n\t\t\t</div>\r\n\t\t\t<h4>מביא פריטים...</h4>\r\n\t\t\t</div>\r\n\t  }\r\n\t  return null;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Categories.css';\r\n\r\nconst endpoint = \"https://jul-on-sale.herokuapp.com/jul\";\r\n\r\nclass Categories extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {categories : [], isFetchingData: false};\r\n        this.fetchData();\r\n    }\r\n    componentDidMount() {\r\n        let self = ReactDOM.findDOMNode(this);\r\n        if (this.state.categories.length === 0) {\r\n            this.fetchData(self);\r\n        } else {\r\n            this.buildCategories(self, this.state.categories);\r\n        }\r\n        \r\n    }\r\n    fetchData(self) {\r\n        this.setState({\r\n            ...this.state, isFetching: true\r\n        });\r\n        fetch(endpoint)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            this.setState({\r\n                ...this.state, isFetching: false, categories: result.message\r\n            });\r\n            if (this.props) {\r\n                this.props.spinnerHandler();\r\n            }\r\n            this.buildCategories(self, result.message);\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                ...this.state, isFetching: false\r\n            });\r\n            if (this.props) {\r\n                this.props.spinnerHandler();\r\n            }\r\n           \r\n        })\r\n    }\r\n    buildCategories(self, categories) {\r\n        for (let index = 0; index < categories.length; index++)\r\n        {\r\n            let category = categories[index];\r\n            let div = document.createElement('div');\r\n            let header = document.createElement('h3');\r\n            let anchor = document.createElement('a');\r\n            let image = document.createElement('img');\r\n\r\n            header.innerHTML = category.name;\r\n            image.src = 'https://github.com/TomerPacific/julOnSale/blob/master/assets/' + category.image + '.png?raw=true';\r\n            image.setAttribute('class', 'category');\r\n            anchor.href = \"https://tomerpacific.github.io/julOnSale/categories/\" + category.image + \"/\" + category.image + \".html\";\r\n            anchor.innerHTML = '<img src=' + image.src + ' class=\"category\" alt=' + category.name + ' title=' + category.name + '>';\r\n\r\n            div.appendChild(header);\r\n            div.appendChild(anchor);\r\n            div.setAttribute('class', 'container');\r\n            self.appendChild(div);\r\n        }\r\n    }\r\n    render() {\r\n        return <div className=\"categories\"></div>\r\n    }\r\n}\r\n\r\nexport default Categories;","import React from 'react';\nimport DateHeader from './DateHeader';\nimport Spinner from './Spinner';\nimport Categories from './Categories';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {shouldShowSpinner: true}\n    this.spinnerHandler = this.spinnerHandler.bind(this);\n  }\n  spinnerHandler() {\n    this.setState({\n      ...this.state, shouldShowSpinner: false\n    })\n  }\n  render() {\n    return <div className=\"App\">\n    <header className=\"App-header\">\n      What's On Sale @ Jul\n    </header>\n    <DateHeader />\n    <Spinner status = {this.state.shouldShowSpinner}/>\n    <Categories spinnerHandler = {this.spinnerHandler}/>\n  </div>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst changeTitleWhenUserMovesAway = function() {\r\n    let pageTitle = document.title;\r\n\r\n    window.addEventListener(\"blur\", function(event) {\r\n        document.title = \" ❤️ U\";\r\n    });\r\n\r\n    window.addEventListener(\"focus\", function(event) {\r\n        document.title = pageTitle;\r\n    });\r\n}\r\n\r\n\r\nexport default changeTitleWhenUserMovesAway;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport changeTitleWhenUserMovesAway from './titleChanger';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nchangeTitleWhenUserMovesAway();"],"sourceRoot":""}