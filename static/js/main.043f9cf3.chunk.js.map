{"version":3,"sources":["DateHeader.jsx","Spinner.js","Category.jsx","Categories.jsx","Routes.jsx","App.js","reportWebVitals.js","titleChanger.js","index.js"],"names":["months","DateHeader","state","date","Date","this","getMonth","getDate","getFullYear","className","props","match","params","categoryName","formatDate","React","Component","withRouter","Spinner","status","Category","shouldShowSpinner","items","length","fetchData","fetch","then","response","json","result","setState","message","catch","error","map","item","name","href","link","src","image","alt","title","price","Categories","categories","category","Routes","exact","path","render","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","changeTitleWhenUserMovesAway","pageTitle","document","window","addEventListener","event","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.043f9cf3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DateHeader.css';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\nclass DateHeader extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {date : new Date()};\r\n  }\r\n  formatDate() {\r\n    return \"For the day of \" + months[this.state.date.getMonth()] + ' ' + this.state.date.getDate() + ', ' + this.state.date.getFullYear(); \r\n  }\r\n  render() {\r\n    return <>\r\n      <header className=\"App-header\">\r\n        What's On Sale @ Jul {this.props?.match?.params?.categoryName}\r\n      </header>\r\n      <div className=\"DateHeader\">\r\n        <p>{this.formatDate()}</p>\r\n      </div>\r\n  </>\r\n  }\r\n}\r\n\r\nexport default withRouter(DateHeader);","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nclass Spinner extends React.Component {\r\n  render() {\r\n\t  const shouldShow = this.props.status;\r\n\t  if (shouldShow) {\r\n\t\treturn <div className=\"loader\">\r\n\t\t\t<div>\r\n\t\t\t</div>\r\n\t\t\t<h4>מביא פריטים...</h4>\r\n\t\t\t</div>\r\n\t  }\r\n\t  return null;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Spinner from './Spinner';\r\nimport { withRouter } from \"react-router\";\r\nimport './Category.css';\r\n\r\nconst endpoint = \"https://jul-on-sale.herokuapp.com/category/\";\r\n\r\nclass Category extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            shouldShowSpinner: true, \r\n            items: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.items.length === 0) {\r\n            this.fetchData();\r\n        }\r\n      }\r\n      fetchData() {\r\n        fetch(endpoint + this.props?.match?.params?.categoryName)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            this.setState({\r\n                ...this.state, \r\n                shouldShowSpinner: false, \r\n                items: result.message\r\n            });\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                ...this.state, \r\n                shouldShowSpinner: false\r\n            });\r\n        })\r\n      }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Spinner status={this.state.shouldShowSpinner}/>\r\n                <div className={\"categoryItems\"}>\r\n                {this.state.items.map(item => {\r\n                    return (\r\n                    <div key={`categoryItem-${item.link}`} className={\"container\"}>\r\n                        <h3>{item.name}</h3>\r\n                        <a href={item.link}>\r\n                        <img\r\n                            src={item.image}\r\n                            className={\"item\"}\r\n                            alt={item.name}\r\n                            title={item.name}\r\n                        />\r\n                        </a>\r\n                        <h2>{item.price}</h2>\r\n                    </div>\r\n                    );\r\n                })}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Category);","import React from 'react';\r\nimport './Categories.css';\r\n\r\nclass Categories extends React.Component {\r\n    render() {\r\n        if (this.props.categories === null) return null;\r\n        return <div className=\"categories\">\r\n            {this.props.categories && this.props.categories.map(category => (\r\n            <div className=\"container\">\r\n                <div key={`category-${category.name}`} className={\"category\"}>\r\n                    <h3>{category.name}</h3>\r\n                    <a href={\"/categories\" + category.image}>\r\n                    <img src={\r\n                        \"https://github.com/TomerPacific/julOnSale/blob/master/assets/\" +\r\n                        category.image +\r\n                        \".png?raw=true\"\r\n                        }\r\n                        alt={`/${category.name}`}\r\n                        title={category.name}\r\n                    />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Categories;","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Category from \"./Category\";\r\nimport Categories from \"./Categories\";\r\n\r\nconst Routes = props => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/home\"} render={() => <Categories {...props} />} />\r\n      <Route exact path={\"/categories/:categoryName\"} component={Category} />\r\n      <Route path=\"*\" render={() => <Redirect to={\"/home\"} />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport DateHeader from './DateHeader';\nimport Spinner from './Spinner';\nimport './App.css';\nimport Routes from './Routes';\n\nconst endpoint = \"https://jul-on-sale.herokuapp.com/jul\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldShowSpinner: true,\n      categories: []\n    }\n  }\n  componentDidMount() {\n    if (this.state.categories.length === 0) {\n        this.fetchData();\n    }\n  }\n  fetchData() {\n    fetch(endpoint)\n    .then(response => response.json())\n    .then(result => {\n        this.setState({\n            ...this.state, \n            shouldShowSpinner: false, \n            categories: result.message\n        });\n    })\n    .catch(error => {\n        this.setState({\n            ...this.state, \n            shouldShowSpinner: false\n        });\n    })\n  } \n  render() {\n    return <div className=\"App\">\n    <DateHeader />\n    <Spinner status = {this.state.shouldShowSpinner}/>\n    <Routes categories={this.state.categories} />\n  </div>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst changeTitleWhenUserMovesAway = function() {\r\n    let pageTitle = document.title;\r\n\r\n    window.addEventListener(\"blur\", function(event) {\r\n        document.title = \" ❤️ U\";\r\n    });\r\n\r\n    window.addEventListener(\"focus\", function(event) {\r\n        document.title = pageTitle;\r\n    });\r\n}\r\n\r\n\r\nexport default changeTitleWhenUserMovesAway;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport changeTitleWhenUserMovesAway from './titleChanger';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nchangeTitleWhenUserMovesAway();"],"sourceRoot":""}